@import "../helpers/vars";

// PX to EM/REM
@function em($pixels, $base: 16) {
  @return #{$pixels/$base}em;
}

@function rem($val, $base: 16) {
  // if it's a unitless number
  @if type-of($val) == number and unitless($val) {
    // don't convert 0
    @if $val == 0 {
      @return 0;
    }
    // assume its px and convert it to rem based on $base document font-size
    @return #{$val / $base}rem;
  }
  @return $val;
}

// Font Face
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

@mixin section-title {
  font-size: 46px;
  line-height: 1.22;
  font-weight: 700;
  color: $violet;

  @media (max-width: $laptop) {
    font-size: 36px;
  }
  @media (max-width: $tablet) {
    font-size: 34px;
  }
  @media (max-width: $note) {
    font-size: 26px;
  }
  @media (max-width: $phone-xl) {
    font-size: 23px;
  }
}
